<!--    Items should have an id to get representation of the list as array, tree or string. -->
<!--    To get a string representation required next format of id: xx_yy, xx-yy or xx=yy. -->

<ul class="list-group list-group-flush" id="myList">
    <li id="item_1" class="list-group-item" data-value="Whatever you want here">
        <div><label>Whatever you want here</label><label class="clickable">[*]</label></div>
    </li>
    <li id="item_2" class="list-group-item" data-value="Nested list item">
        <div><label>Nested list item</label><label class="clickable">[*]</label></div>
    </li>
    <li id="item_3" class="list-group-item" data-value="Another item">
        <div><label>Another item</label><label class="clickable">[*]</label></div>
    </li>
</ul>

<textarea
        name="<%= key %>"
        id="form-<%= key %>"
        rows="10">
</textarea>

<script>

    function createDOM(data) {
        let ul = document.createElement('ul');
        for (let item of data) {
            $(ul).append(`<li id="${item.id}" class="list-group-item" data-value="${item.value}">` +
                `<div><label>${item.value}</label><label class="clickable">[*]</label></div>` +
                '</li>');
            if (item.children.length > 0) {
                $(" > li[id=" + item.id + "]", ul).append(createDOM(item.children));
            }
        }
        return ul;
    }

    let options = {
        // Like a css class name. Class will be removed after drop.
        currElClass: 'currElemClass',

        placeholderClass: 'placeholderClass',

        hintClass: 'hintClass',

        listsClass: 'listsClass',

        // All elements with class clickable will be clickable
        ignoreClass: 'clickable',

        insertZone: 50,

        insertZonePlus: true,

        scroll: 20,

        opener: {
            active: true,
            as: 'html',  // or "class"
            close: '<i class="fa fa-minus red"></i>', // or 'fa fa-minus'
            open: '<i class="fa fa-plus"></i>', // or 'fa fa-plus'
            openerCss: {
                'display': 'inline-block', // Default value
                'float': 'left', // Default value
                'width': '18px',
                'height': '18px',
                'margin-left': '-35px',
                'margin-right': '5px',
                'background-position': 'center center', // Default value
                'background-repeat': 'no-repeat' // Default value
            },
        },

        onChange: function()
        {
            $('textarea').val(JSON.stringify($('#myList').sortableListsToHierarchy()));
            const <%=key%>EditNavigation = new EditNavigation({
                element: '<%=key%>-container',
                field: '<%=key%>',
                data: $('#form-<%=key%>').val()
            });

            <%=key%>EditNavigation.logConfig();
            $('#myList').after(createDOM(JSON.parse($('#form-<%= key %>').val())));
        }
    }

    $('#myList').sortableLists(options);
    $('.clickable').on('click', function () { alert("Click") });

</script>