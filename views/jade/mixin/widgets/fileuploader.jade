mixin imageUploader(key, field)
  | const #{key}FileManager = new FileUploader({
  | element: '#{key}-container',
  | type: 'image',
  | field: '#{key}',
  | filesize: #{field.config.ImageUploader.filesize},
  | url: '#{instance.uri}/upload',
  | data: 'form-#{key}',
  | small: '#{field.config.ImageUploader.small}',
  | large: '#{field.config.ImageUploader.large}',
  | acceptedFiles:!{JSON.stringify(field.config.ImageUploader.accepted)},
  if (field.config.ImageUploader.resize)
    | resize: !{JSON.stringify(field.config.ImageUploader.resize)},
  if (field.config.ImageUploader.aspect)
    | aspect: {
    |   width: !{field.config.ImageUploader.aspect.width},
    |   height: !{field.config.ImageUploader.aspect.height}
    | },
  if (field.config.ImageUploader.size)
    | size: {
    |   width: '!{field.config.ImageUploader.size.width}',
    |   height: '!{field.config.ImageUploader.size.height}'
    | }
  | });

mixin galleryUploader(key, field)
  | const #{key}FileManager = new FileUploader({
  | element: '#{key}-container',
  | type: 'images',
  | field: '#{key}',
  | filesize: #{field.config.GalleryUploader.filesize},
  | url: '#{instance.uri}/upload',
  | data: 'form-#{key}',
  | acceptedFiles:!{JSON.stringify(field.config.GalleryUploader.accepted)},
  if (field.config.GalleryUploader.aspect)
    | aspect: {
    |   width: !{field.config.GalleryUploader.aspect.width},
    |   height: !{field.config.GalleryUploader.aspect.height}
    | },
  if (field.config.GalleryUploader.size)
    | size: {
    |   width: '!{field.config.GalleryUploader.size.width}',
    |   height: '!{field.config.GalleryUploader.size.height}'
    | },
  if (field.config.GalleryUploader.resize)
    | resize: !{JSON.stringify(field.config.GalleryUploader.resize)},
  | images: {
  if (field.config.GalleryUploader.preview)
    |   dataPreview: "form-#{field.config.GalleryUploader.preview}"
  | }
  | });
  | $('#form-#{field.config.GalleryUploader.preview}').css({display: 'none'});

mixin filesUploader(key, field)
  | const #{key}FileManager = new FileUploader({
  | element: '#{key}-container',
  | type: 'files',
  | field: '#{key}',
  | filesize: #{field.config.FilesUploader.filesize},
  | url: '#{instance.uri}/upload',
  | data: 'form-#{key}',
  | small: '0',
  | large: '0',
  | acceptedFiles:!{JSON.stringify(field.config.FilesUploader.accepted)}
  | });

mixin fileUploader(key, field)
  | const #{key}FileManager = new FileUploader({
  | element: '#{key}-container',
  | type: 'file',
  | field: '#{key}',
  | filesize: #{field.config.FileUploader.filesize},
  | url: '#{instance.uri}/upload',
  | data: 'form-#{key}',
  | small: '0',
  | large: '0',
  | acceptedFiles:!{JSON.stringify(field.config.FileUploader.accepted)}
  | });

mixin scripts()
  link(rel="stylesheet", href="/admin/fileuploader/styles/styles.css")
  link(rel="stylesheet", href="/admin/fileuploader/styles/basic.css")
  link(rel="stylesheet", href="/admin/fileuploader/styles/dropzone.css")
  link(rel="stylesheet", href="/admin/fileuploader/styles/bootstrap.css")
  link(rel="stylesheet", href="/admin/fileuploader/styles/jquery-ui.min.css")
  link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css")
  script(src="/admin/fileuploader/js/dropzone.js")
  script(src="/admin/fileuploader/js/jquery-ui.min.js")
  script(src="/admin/fileuploader/js/bootstrap.js")
  script(src="/admin/fileuploader/js/fileupload.js")
